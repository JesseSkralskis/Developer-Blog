{"version":3,"sources":["routes/PublicRoute.js","components/BlogListItem.js","selectors/blogSelectors.js","components/Filters.js","actions/filters.js","components/BlogList.js","firebase/firebase.js","components/Header.js","actions/auth.js","components/DashBoard.js","actions/blog.js","components/BlogForm.js","components/EditEntry.js","components/NotFoundPage.js","components/LoginPage.js","components/CreateBlog.js","routes/PrivateRoute.js","components/ExpandedBlog.js","routes/AppRouter.js","App.js","serviceWorker.js","reducers/filters.js","reducers/blog.js","reducers/auth.js","store/configStore.js","index.js"],"names":["king","process","connect","state","isAuthenticated","auth","uid","Component","component","rest","props","to","withRouter","id","title","blog","createdAt","history","className","onClick","push","handleOnClick","moment","format","blogs","text","sortBy","startDate","endDate","filter","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","titleMatch","toLowerCase","includes","blogMatch","sort","a","b","filters","dispatch","setTextFilter","value","type","sortByRecent","sortByOldest","setStartDate","setEndDate","useState","calenderFocused","setFocus","onChange","e","target","console","log","placeholder","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","numberOfMonths","isOutsideRange","showClearDates","selectBlogs","blogPost","map","key","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","googleAuthProvider","GoogleAuthProvider","undefined","startLogout","signOut","DashBoard","addBlogEntry","deleteEntry","compose","data","startAddBlogEntry","blogData","getState","blogToDataBase","ref","then","editedBlog","setTitle","setBlog","setCalenderFocused","error","setError","final","setFinal","useEffect","Object","entries","length","constructor","onSubmit","setCreatedAt","preventDefault","valueOf","date","onDateChange","focused","focus","find","match","params","startEditBlog","updates","update","snapshot","editBlog","blogFromForm","NotFoundPage","startLogin","signInWithPopup","CreateBlog","blogy","deleteBlog","startDelete","remove","createHistory","AppRouter","path","exact","LoginPage","ExpandedBlog","EditEntry","App","Boolean","window","location","hostname","filtersDefaultState","startOf","endOf","action","defaultBlogState","composeEnhansers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","combineReducers","authReducer","applyMiddleware","thunk","testBlogs","uuid","jsx","ReactDOM","render","document","getElementById","hasRendered","renderApp","navigator","serviceWorker","ready","registration","unregister","onAuthStateChanged","user","once","forEach","childSnapShot","val","setBlogs","pathname"],"mappings":"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","file":"static/js/main.6928dbed.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const king = process.env.REACT_APP_KING_KEY;\n\n//destructure props renaming component to capital because we will be rendering it\n//when destructering we can get the rest of whatever using the ...rest\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    component={props =>\n      isAuthenticated ? (\n        <div>\n          <Component {...props} />\n        </div>\n      ) : (\n          \n            <Redirect to=\"/\"/>\n        \n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  //using thwe double !! to get actual boolean values\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { king } from \"../routes/PublicRoute\";\n\nimport { withRouter } from \"react-router-dom\";\n\nexport function BlogListItem({ id, title, blog, createdAt, history, uid }) {\n  const handleOnClick = id => {\n    history.push(`/expandedBlog/${id}`);\n  };\n\n  return (\n    <div className=\"bloglist_items\">\n      <h1>{title}</h1>\n      <div className=\"bloglist_blog\">\n        <p>{blog}</p>\n      </div>\n      <div className=\"bloglist__readmore-wrapper\">\n        <button\n          className=\"buttons buttons--secondary_darkPurp\"\n          onClick={() => handleOnClick(id)}\n        >\n          Read More\n        </button>\n      </div>\n\n      <div className=\"bloglist__post\">\n        {king === uid && (\n          <Link to=\"/create\">\n            <button className=\"buttons buttons--post\">New Post</button>\n          </Link>\n        )}\n      </div>\n\n      <small>{moment(createdAt).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</small>\n    </div>\n  );\n}\n\nexport default withRouter(BlogListItem);\n","import moment from \"moment\";\n\nexport default (blogs, { text, sortBy, startDate, endDate }) => {\n  return (\n    blogs\n      .filter(blog => {\n        const createdAtMoment = moment(blog.createdAt);\n        const startDateMatch = startDate\n          ? startDate.isSameOrBefore(createdAtMoment, \"day\")\n          : true;\n        const endDateMatch = endDate\n          ? endDate.isSameOrAfter(createdAtMoment, \"day\")\n          : true;\n        const titleMatch = blog.title\n          .toLowerCase()\n          .includes(text.toLowerCase());\n\n        const blogMatch = blog.blog.toLowerCase().includes(text.toLowerCase());\n\n        return startDateMatch && endDateMatch && (titleMatch || blogMatch);\n      })\n      // eslint-disable-next-line array-callback-return\n      .sort((a, b) => {\n        if (sortBy === \"recent\") {\n          return a.createdAt < b.createdAt ? 1 : -1;\n        } else if (sortBy === \"oldest\") {\n          return a.createdAt > b.createdAt ? 1 : -1;\n        }\n      })\n  );\n};\n","import React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport { connect } from \"react-redux\";\nimport {\n  setTextFilter,\n  sortByOldest,\n  sortByRecent,\n  setStartDate,\n  setEndDate\n} from \"../actions/filters\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"../styles/css/react_dates_overrides.scss\";\nconst Filters = ({\n  setTextFilter,\n  sortByRecent,\n  sortByOldest,\n  filters,\n  setStartDate,\n  setEndDate\n}) => {\n  const [calenderFocused, setFocus] = useState(null);\n\n  const handleFocusChange = calenderFocused => {\n    setFocus(calenderFocused);\n  };\n\n  const handleDatesChange = ({ startDate, endDate }) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const handleSelectChange = e => {\n    if (e.target.value === \"recent\") {\n      sortByRecent();\n    } else if (e.target.value === \"oldest\") {\n      sortByOldest();\n    }\n  };\n\n  const handleTextChange = e => {\n    console.log(calenderFocused);\n    setTextFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"filters__content-container\">\n      <h2>Search Features</h2>\n      <select\n        className=\"filters__select\"\n        value={filters.sortBy}\n        onChange={handleSelectChange}\n      >\n        <option value=\"recent\">Most recent blog </option>\n        <option value=\"oldest\">Oldest Blog first </option>\n      </select>\n\n      <input\n        className=\"filters__input\"\n        onChange={handleTextChange}\n        type=\"text\"\n        placeholder=\"Search for a blog with a key word\"\n      ></input>\n\n      <div className=\"filters__datebox\">\n        <DateRangePicker\n          startDate={filters.startDate}\n          startDateId={\"abcd5678\"}\n          endDate={filters.endDate}\n          endDateId={\"abc1235\"}\n          onDatesChange={handleDatesChange}\n          focusedInput={calenderFocused}\n          onFocusChange={handleFocusChange}\n          numberOfMonths={1}\n          isOutsideRange={() => false}\n          showClearDates={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    filters: state.filters\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setTextFilter: value => dispatch(setTextFilter(value)),\n  sortByRecent: () => dispatch(sortByRecent()),\n  sortByOldest: () => dispatch(sortByOldest()),\n  setStartDate: startDate => dispatch(setStartDate(startDate)),\n  setEndDate: endDate => dispatch(setEndDate(endDate))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\n","export const setTextFilter = (text) => ({\n    type: \"SET_TEXT_FILTER\",\n    text\n});\n\n\nexport const sortByOldest = () => ({\n    type: \"SORT_BY_OLDEST\"\n   \n\n});\n\nexport const sortByRecent = () => ({\n    type: \"SORT_BY_RECENT\"\n   \n});\n\n// export const sortByKeyword = () => ({\n//     type: \"SORT_BY_KEYWORD_BLOG\"\n// });\n\nexport const setStartDate = (startDate) => ({\n    type: \"SET_START_DATE\",\n    startDate\n});\n\n\n   export const setEndDate = (endDate) => ({\n       type: \"SET_END_DATE\",\n       endDate\n   }); \n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport BlogListItem from \"./BlogListItem\";\nimport selectBlogs from \"../selectors/blogSelectors\";\nimport Filters from \"./Filters\";\n\nconst BlogList = ({ blogs, uid }) => (\n  <div className=\"bloglist__container\">\n    <div className=\"bloglist__scrollbar-removal\">\n      <div className=\"bloglist__blogs-wrapper\">\n        {blogs.map(({ id, title, blog, createdAt }) => (\n          <BlogListItem\n            uid={uid}\n            className=\"bloglist__blog\"\n            blogs={blogs}\n            id={id}\n            key={id}\n            title={title}\n            blog={blog}\n            createdAt={createdAt}\n          />\n        ))}\n      </div>\n    </div>\n\n    <div className=\"bloglist__filters-wrapper\">\n      <Filters />\n    </div>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  blogs: selectBlogs(state.blogPost, state.filters),\n  uid: state.auth.uid\n});\n\nexport default connect(mapStateToProps)(BlogList);\n","//takes all named exports from firebase and dumps them on firebase variable\nimport * as firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n//this set up allows us to geab all the firebase stuff we need from other places\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst database = firebase.database();\n//for authentication we neesd to provide a provider\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { firebase, googleAuthProvider, database as default };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { startLogout } from \"../actions/auth\";\n\nconst Header = ({ startLogout }) => (\n  //navlink allows gives us props that help us style easily the\n  //nav we are on using activeclassname and the styling is-active\n  <header className=\"header\">\n    <div className=\"header__content\">\n      <div className=\"header__psuedo\"></div>\n      <div className=\"header__link-wrapper\">\n        {\" \"}\n        <Link className=\"header__link\" to=\"/dashboard\">\n          {\" \"}\n          <h1 id=\"header__h1\">Pivot</h1>\n        </Link>\n      </div>\n\n      <div className=\"header__buttonContainer\">\n        <button className=\"buttons buttons--logout\" onClick={startLogout}>\n          Logout\n        </button>\n      </div>\n    </div>\n  </header>\n);\n\nconst mapDipatchToProps = dispatch => ({\n  startLogout: () => dispatch(startLogout())\n});\n\nexport default connect(undefined, mapDipatchToProps)(Header);\n","import { firebase, googleAuthProvider } from \"../firebase/firebase\";\n\nexport const startLogin = () => {\n  return () => {\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n};\n\nexport const startLogout = () => {\n  return () => {\n    return firebase.auth().signOut();\n  };\n};\n\nexport const login = uid => ({\n  type: \"LOGIN\",\n  uid\n});\n\nexport const logout = () => ({\n  type: \"LOGOUT\"\n});\n","import React from \"react\";\n\nimport BlogList from \"./BlogList\";\nimport Header from \"./Header\";\n\n//need to import the named export from redux-react to be able to get the store\n//this is the parent of expense list\n\nconst DashBoard = () => (\n  <div className=\"dashboard__container\">\n    <div className=\"dashboard__exsisting-content\">\n      <Header />\n    </div>\n    <div className=\"dashboard__remaining-space\">\n      <BlogList />\n    </div>\n  </div>\n);\n\nexport default DashBoard;\n","import database from \"../firebase/firebase\";\n\nconst king = process.env.REACT_APP_KING_KEY;\n\nexport const addBlogEntry = blogPost => ({\n  type: \"ADD_BLOG_ENTRY\",\n  blogPost\n});\n\nexport const startAddBlogEntry = (blogData = {}) => {\n  console.log(\"called\");\n\n  return (dispatch, getState) => {\n    const { title = \"\", blog = \"\", createdAt = 0 } = blogData;\n    const uid = getState().auth.uid;\n    console.log(`@@@@@@@@@@@@ getting this id ${uid}`);\n    const blogToDataBase = { title, blog, createdAt };\n    database\n      .ref(`users/${uid}/blogs`)\n      .push(blogToDataBase)\n      .then(ref => {\n        dispatch(\n          addBlogEntry({\n            id: ref.key,\n            ...blogToDataBase\n          })\n        );\n      });\n  };\n};\n\nexport const deleteEntry = id => ({\n  type: \"DELETE_BLOG_ENTRY\",\n  id\n});\n\nexport const startDelete = id => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database\n      .ref(`/users/${uid}/blogs/${id}`)\n      .remove()\n      .then(snapshot => {\n        dispatch(deleteEntry(id));\n      });\n  };\n};\n\nexport const editBlog = (id, updates) => ({\n  type: \"EDIT_BLOG_ENTRY\",\n  id,\n  updates\n});\n\nexport const startEditBlog = (id, updates) => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database\n      .ref(`/users/${uid}/blogs/${id}`)\n      .update(updates)\n      .then(snapshot => {\n        dispatch(editBlog(id, updates));\n      });\n  };\n};\n\nexport const setBlogs = blogs => ({\n  type: \"SET_BLOGS\",\n  blogs\n});\n\nexport const startSetBlog = () => {\n  return dispatch => {\n    return database\n      .ref(`users/${king}/blogs`)\n      .once(\"value\")\n      .then(snapshot => {\n        const blogs = [];\n        snapshot.forEach(childSnapShot => {\n          blogs.push({\n            id: childSnapShot.key,\n            ...childSnapShot.val()\n          });\n        });\n\n        dispatch(setBlogs(blogs));\n      });\n  };\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { SingleDatePicker } from \"react-dates\";\n\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { addBlogEntry, startAddBlogEntry } from \"../actions/blog\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nexport function BlogForm(props) {\n  const [title, setTitle] = useState(\n    props.editedBlog ? props.editedBlog.title : \"\"\n  );\n  const [blog, setBlog] = useState(\n    props.editedBlog ? props.editedBlog.blog : \"\"\n  );\n\n  const [calenderFocused, setCalenderFocused] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [final, setFinal] = useState({});\n\n  useEffect(() => {\n    if (Object.entries(final).length === 0 && final.constructor === Object) {\n    } else {\n      if (!props.editedBlog) {\n        props.startAddBlogEntry(final);\n        props.history.push(\"/dashboard\");\n      } else {\n        props.onSubmit(props.editedBlog.id, final);\n        props.history.push(\"/dashboard\");\n      }\n    }\n  }, [props, final, props.startAddBlogEntry, props.history]);\n\n  const [createdAt, setCreatedAt] = useState(\n    props.editedBlog ? moment(props.editedBlog.createdAt) : moment()\n  );\n\n  const handleOnChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleBlogChange = e => {\n    const value = e.target.value;\n    setBlog(value);\n  };\n  const handleDateChange = date => {\n    setCreatedAt(date);\n  };\n\n  const onFocusChange = focus => {\n    setCalenderFocused(focus.focused);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    if (title.length < 1 || blog.length < 1) {\n      setError(\"You need to fill out the Title and Blog form\");\n    } else {\n      setFinal({\n        title: title,\n        blog: blog,\n        createdAt: createdAt.valueOf()\n      });\n\n      setTitle(\"\");\n      setBlog(\"\");\n      setCreatedAt(moment());\n    }\n  };\n  return (\n    <div className=\"bf__container\">\n      {error.length > 1 && (\n        <div className=\"bg__error\">\n          <h1>{error}</h1>\n        </div>\n      )}\n      <form className=\"bf__formContainer\" onSubmit={handleOnSubmit}>\n        <div className=\"bf__above\">\n          <div className=\"bf__input-wrapper\">\n            <input\n              className=\"bf__input\"\n              value={title}\n              onChange={handleOnChange}\n              placeholder=\"Blog Title\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"single\">\n            <SingleDatePicker\n              date={createdAt}\n              //similr to other event handlers but difference is\n              //this one is called by our third party library\n              onDateChange={handleDateChange}\n              focused={calenderFocused}\n              onFocusChange={onFocusChange}\n              //custumization\n              //docu https://github.com/airbnb/react-dates\n              numberOfMonths={1}\n              isOutsideRange={() => {\n                return false;\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"bf__textArea\">\n          <textarea\n            placeholder=\"Blog goes here\"\n            type=\"text\"\n            value={blog}\n            onChange={handleBlogChange}\n          />\n        </div>\n\n        <div className=\"bf__buttonPost\">\n          <button className=\"buttons \">Post Blog</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBlogEntry: data => dispatch(addBlogEntry(data)),\n  startAddBlogEntry: blog => dispatch(startAddBlogEntry(blog))\n});\n\nexport default compose(\n  withRouter,\n  connect(undefined, mapDispatchToProps)\n)(BlogForm);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport BlogForm from \"./BlogForm\";\nimport { connect } from \"react-redux\";\nimport { startEditBlog } from \"../actions/blog\";\n\nexport function EditEntry({ startEditBlog, blog, match }) {\n  const onSubmit = (id, blogFromForm) => {\n    startEditBlog(id, blogFromForm);\n  };\n\n  return (\n    <div>\n      <Header />\n      <BlogForm id={match.params.id} editedBlog={blog} onSubmit={onSubmit} />\n    </div>\n  );\n}\nconst mapDispatchToProps = dispatch => ({\n  startEditBlog: (id, blog) => dispatch(startEditBlog(id, blog))\n});\n\nconst mapStateToProps = (state, props) => {\n  return {\n    //find allows us to look through an array looking for a single item\n    blog: state.blogPost.find(blog => {\n      return blog.id === props.match.params.id;\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEntry);\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst NotFoundPage = () => (\n  <div>\n    404! - <Link to=\"/\">Go Back Home</Link>\n  </div>\n);\n\nexport default NotFoundPage;","import React from \"react\";\n\n\nimport { connect } from \"react-redux\";\nimport { startLogin } from \"../actions/auth\";\n\n//destructure the props to get our dispatch\nexport const LoginPage = ({ startLogin }) => {\n  // const handleGuestEntry = (e) => {\n  //   history.push(\"/dashboard\");\n\n  return (\n    <div className=\"box-layout\">\n      <div className=\"box-layout__box\">\n        <h1 className=\"box-layout__title \">Pivot</h1>\n        <div className=\"box-layout__box-container\">\n          <button className=\"buttons\" onClick={startLogin}>\n            Login with Google\n          </button>\n        </div>\n\n        <div className=\"box-layout__move-both\">\n          <p className=\"box-layout__name\">Jesse Skralskis</p>\n          <p className=\"box-layout__description\">\n            a full stack web developer coding blog\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  startLogin: () => dispatch(startLogin())\n});\n\nexport default connect(undefined, mapDispatchToProps)(LoginPage);\n","import Header from \"./Header\";\nimport BlogForm from \"./BlogForm\";\n\nimport React from \"react\";\n\nexport default function CreateBlog() {\n  return (\n    <div className=\"create__container\">\n      <div className=\"create__header\">\n        <Header />\n      </div>\n      <div className=\"create__remaining\">\n        <BlogForm />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { king } from \"./PublicRoute\";\n\n//destructure props renaming component to capital because we will be rendering it\n//when destructering we can get the rest of whatever using the ...rest\nexport const PrivateRoute = ({ component: Component, uid, ...rest }) => (\n  //this is how to only allow a logged in user to see certain pages\n  <Route\n    {...rest}\n    component={props =>\n      king === uid ? (\n        <div>\n          <Component {...props} />\n        </div>\n      ) : (\n        <Redirect to=\"/dashboard\" />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  //using thwe double !! to get actual boolean values\n  uid: state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport moment from \"moment\";\nimport { deleteEntry, startDelete } from \"../actions/blog\";\nimport { king } from \"../routes/PublicRoute\";\n\nexport function ExpandedBlog({ blogy, match, startDelete, history, uid }) {\n  const handleDelete = () => {\n    console.log(blogy.id);\n    startDelete(blogy.id);\n    history.push(\"/dashboard\");\n  };\n\n  const handleEdit = () => {\n    history.push(`/edit/${blogy.id}`);\n  };\n\n  return (\n    <div className=\"expaned__container\">\n      <Header />\n\n      <div className=\"expanded__content\">\n        <div className=\"expanded__inner\">\n          <article key={match.params.id}>\n            <h1>{blogy.title}</h1>\n            <p>{blogy.blog}</p>\n            {king === uid}\n            <div>\n              {uid === king && (\n                <button\n                  className=\"buttons buttons--delete\"\n                  onClick={handleDelete}\n                >\n                  Delete Post\n                </button>\n              )}\n              {uid === king && (\n                <button className=\"buttons\" onClick={handleEdit}>\n                  Edit Post\n                </button>\n              )}\n            </div>\n\n            <p id=\"p2\">\n              {moment(blogy.createdAt).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}\n            </p>\n          </article>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    blogy: state.blogPost.find(blog => {\n      return blog.id === props.match.params.id;\n    }),\n    uid: state.auth.uid\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBlog: id => dispatch(deleteEntry(id)),\n  startDelete: data => dispatch(startDelete(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandedBlog);\n","import React from \"react\";\n\nimport { Switch, Router, Route } from \"react-router-dom\";\nimport \"../styles/styles.scss\";\n\nimport DashBoard from \"../components/DashBoard\";\nimport EditEntry from \"../components/EditEntry\";\n\nimport NotFoundPage from \"../components/NotFoundPage.js\";\nimport LoginPage from \"../components/LoginPage\";\nimport CreateBlog from \"../components/CreateBlog\";\n//import this to get access to history api anywhere\nimport createHistory from \"history/createBrowserHistory\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport ExpandedBlog from \"../components/ExpandedBlog\";\n\nexport const history = createHistory();\n//instaed of using browser route3r with history built in\n//we pass in our custom history\n//now we have the advantage to use history in other files\n\nconst AppRouter = () => (\n  <Router history={history}>\n    {/* if more than on route must wrap with a div */}\n    <div>\n      {/* switch allows us to say if a route has no path match to print the\n      component */}\n      <Switch>\n        <Route path=\"/\" exact={true} component={LoginPage} />\n        <PublicRoute path=\"/dashboard\" component={DashBoard} />\n\n        <PrivateRoute path=\"/create\" component={CreateBlog} />\n        <PublicRoute path=\"/expandedBlog/:id\" component={ExpandedBlog} />\n        <PrivateRoute path=\"/edit/:id\" component={EditEntry} />\n\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./routes/AppRouter\";\nimport \"./App.css\";\n\n//needed to make the date picker be styled prtoperly\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"../src/firebase/firebase\";\n\nfunction App() {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import moment from \"moment\";\n\nconst filtersDefaultState = {\n  text: \"\",\n  sortBy: \"recent\",\n  startDate: moment().startOf(\"month\"),\n  endDate: moment().endOf(\"month\")\n};\n\nexport default (state = filtersDefaultState, action) => {\n  switch (action.type) {\n    case \"SET_TEXT_FILTER\":\n      return {\n        ...state,\n        text: action.text\n      };\n\n    case \"SORT_BY_RECENT\":\n      return {\n        ...state,\n        sortBy: \"recent\"\n      };\n\n    case \"SORT_BY_OLDEST\":\n      return {\n        ...state,\n        sortBy: \"oldest\"\n      };\n\n      \n\n      case \"SET_START_DATE\":\n          return {\n              ...state,\n              startDate:action.startDate\n          }\n\n      case \"SET_END_DATE\":\n          return {\n              ...state,\n              endDate: action.endDate\n          }\n\n    default:\n      return state;\n  }\n};\n","const defaultBlogState = [];\n\nexport default (state = defaultBlogState, action) => {\n  switch (action.type) {\n    case \"ADD_BLOG_ENTRY\":\n      return [...state, action.blogPost];\n\n    case \"DELETE_BLOG_ENTRY\":\n      return state.filter(({ id }) => id !== action.id);\n\n    case \"EDIT_BLOG_ENTRY\":\n      return state.map(blog => {\n        console.log(`blogid ${blog.id} action ${action.updates}`);\n        if (blog.id === action.id) {\n          return {\n            ...blog,\n            ...action.updates\n          };\n        } else {\n          return blog;\n        }\n      });\n\n    case \"SET_BLOGS\":\n      return action.blogs;\n\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        uid: action.uid\n      };\n    case \"LOGOUT\":\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers,applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport filters from \"../reducers/filters\";\nimport blogPost from '../reducers/blog';\n\n\n\nimport authReducer from '../reducers/auth';\n//in order to keep the dev tools we have to config a specific way\n// this config allows for redux and firebase to work together\n\nconst composeEnhansers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  //Store creation\n  //using combine reducers to register reducers\n  const store = createStore(\n    combineReducers({\n      filters: filters,\n      auth: authReducer,\n      blogPost: blogPost\n    }),\n    composeEnhansers(applyMiddleware(thunk))\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \n  );\n    \n    return store\n};\n\n\n\n\n\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./styles/styles.scss\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configStore from \"../src/store/configStore\";\nimport { startSetBlog } from \"./actions/blog\";\nimport { firebase } from \"./firebase/firebase\";\n//provider allows us to provide the redux store to all our components\nimport { Provider } from \"react-redux\";\n//call to the export default function gives us access to the store\nimport { history } from \"./routes/AppRouter\";\nimport { login, logout } from \"./actions/auth\";\nimport moment from \"moment\";\nimport uuid from \"uuid\";\n\nconst store = configStore();\n\n\n\nexport const testBlogs = [\n  {\n    id: uuid(),\n    title: \"one\",\n    blog:\n      \"A toast to my cold Christmas in England a month ago: a welcome change from the constant oppressive heat, dust and humidity of Dar es Salaam.A toast to my cold Christmas in England a month ago: a welcome change from the constant oppressive heat, dust and humidity of Dar es Salaam.A toast to my cold Christmas in England a month ago: a welcome change from the constant oppressive heat, dust and humidity of Dar es Salaam. \",\n    createdAt: moment()\n  },\n  {\n    id: uuid(),\n    title: \"two\",\n    blog: \"second blog\",\n    createdAt: moment()\n  }\n];\n\nconst jsx = (\n  // by using this now all applications wwill have access to the store\n  <Provider  store={store}>\n    <App />\n  </Provider>\n);\nReactDOM.render(jsx, document.getElementById(\"root\"));\n// allows us to conditionally have app render\nlet hasRendered = false;\nconst renderApp = () => {\n  if (!hasRendered) {\n    ReactDOM.render(jsx, document.getElementById(\"root\"));\n    hasRendered = true;\n  }\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n//runs call back when auth status changes\n//we need the history api but usually it only is available in a component thats been routed\n\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    store.dispatch(login(user.uid));\n\n    //to get user id we\n\n    console.log(\"logged in\");\n    store.dispatch(startSetBlog()).then(() => {\n      renderApp();\n      if (history.location.pathname === \"/\") {\n        history.push(\"/dashboard\");\n      }\n    });\n  } else {\n    //redirects us where we specify\n    store.dispatch(logout());\n    console.log(\"logged out\");\n    renderApp();\n    history.push(\"/\");\n  }\n});\n"],"sourceRoot":""}